#!/usr/bin/env python
import sys
import os
import logging
import glob
#
import cluster
from tauperf import UNMERGED_NTUPLE_PATH
from tauperf.datasets import create_database, read_database
#
log = logging.getLogger(os.path.basename(__file__))

SAMPLES = read_database()

all_files = []
for key, sample in SAMPLES.items():
    log.info('Submitting ...')
    print key
    
    if sample.has_key('dirs'):
        for d in sample['dirs']:
            print d
            files = glob.glob(
                os.path.join(UNMERGED_NTUPLE_PATH, d, sample['prefix'] + '*.root*'))
            all_files.extend(files)

print all_files
setup = cluster.get_setup(os.path.join(
    os.path.dirname(cluster.__file__), 'setup.sfu.txt'))
log_path = os.path.join(os.getcwd(), 'log')

if __name__ == '__main__':
    from rootpy.extern.argparse import ArgumentParser
    parser = ArgumentParser()
    parser.add_argument(
        '--driver', default='apply-pileup-corrections', 
        choices = ['apply-pileup-corrections', 'add-abs-ipsiglead', 'apply-bdt-weights-from-xml', 'apply-bdt-weights'])
    parser.add_argument('--prefix', default='', choices=['', 'extended', 'corrected.extended', 'corrected'])
    parser.add_argument('--dry', action='store_true', default=False)
    args = parser.parse_args()

    for f in all_files:
        if args.prefix != '':
            f = f.replace(f.split('/')[-1], args.prefix + '.' + f.split('/')[-1])
        print f
        cmd = './{0} {1}'.format(args.driver, f)
        name = cmd.replace(" ", "_").replace(UNMERGED_NTUPLE_PATH, '').replace('/', '_')[1:]
        cmd = "cd %s && %s && %s" % (os.getcwd(), setup, cmd)
        print name
        cluster.qsub(
            cmd,
            name=name,
            queue=os.getenv('PBS_QUEUE', 'medium'),
            ncpus=int(os.getenv('PBS_PPN', 1)),
            stdout_path=log_path,
            stderr_path=log_path,
            dry_run=args.dry)
