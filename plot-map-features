#!/usr/bin/env python
import os
import logging
import re
import rootpy
from rootpy.plotting import Canvas
from rootpy.plotting.style import set_style
from rootpy.tree import Cut
from tauperf.analysis import Analysis
from tauperf.cmd import get_parser
from tauperf.variables import VARIABLES
from tauperf.plotting import draw_ratio
from tauperf import UNMERGED_NTUPLE_PATH
log = logging.getLogger(os.path.basename(__file__))
if not os.environ.get("DEBUG", False):
    log.setLevel(logging.INFO)
rootpy.log.setLevel(logging.INFO)
set_style('ATLAS', shape='rect')


if __name__ == "__main__":
    parser = get_parser('plot')				
    parser.add_argument('--dummy-range', action='store_true', default=False)
    args = parser.parse_args()

    cuts = None
    if args.cut:
        cuts = Cut(args.cut)

    ana = Analysis(
        use_drellyan=args.use_dy,
        trigger=args.trigger)

    for cat in ana.iter_categories(args.categories):


        for v in cat.features:
            v1 = VARIABLES[v]

            if v == 'AbsipSigLeadTrk':
                v2 = VARIABLES['ipSigLeadTrkCorrected']
            else:
                v2 = VARIABLES[v + 'Corrected']

            m = ana.jet.get_2d_map(
                v1, v2, category=cat, 
                prefix=args.level, 
                cuts=cuts,
                dummy_range=args.dummy_range)

            m.xaxis.title = v1['root']
            m.yaxis.title = v2['root']
            c = Canvas()
            c.SetRightMargin(0.2)
            m.Draw('colz')
            c.SaveAs(os.path.join('plots/features/', args.level + '_map_' + v + '_' + cat.name+'.png'))

                               
